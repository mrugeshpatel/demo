package com.jpmc.theater.service;



import java.text.ParseException;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jpmc.theater.model.Customer;
import com.jpmc.theater.model.Movie;
import com.jpmc.theater.model.Showing;
import com.jpmc.theater.model.Theater;
import com.jpmc.theater.request.BookingRequest;

import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class ShowBookingService {

	@Autowired
	private CustomerService customerService;
	
	@Autowired
	private MovieService movieService;
	
	@Autowired
	private ShowingService showingService;
	
	@Autowired
	private DiscountService discountService;
	
	@Autowired
	private ReservationService reservationService;
	
	@Autowired
	private TheaterService theaterService;
	
	@Transactional
	public void book(final BookingRequest booking) throws ParseException {
		log.info("Starting ticket booking", booking.toString());
		
		customerService.save(new Customer(booking.getCustomer()));
		
		Optional<Theater> theaterOptional = theaterService.findTheaterByNameAndLocation(booking.getTheater(), booking.getLocation());
		if(theaterOptional.isEmpty())
			throw new RuntimeException("Theater does not exist");
		Theater theater = theaterOptional.get();
		
		Optional<Movie> movieOptional = movieService.findByTitle(booking.getMovie());
		if(movieOptional.isEmpty())
			throw new RuntimeException("Movie does not exist");
		Movie movie = movieOptional.get();
		
		Optional<Showing> showingOptional = showingService.findByTheaterAndMovieAndShowNum(theater.getId(), movie.getId(),
				booking.getSequence());
		
		Showing showing = showingOptional.get();
		
		double discount = discountService.getDiscount(movie, showing);
		
		
	}
	
}
